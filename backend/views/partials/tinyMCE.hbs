
    {{!-- <!-- Config TinyMCE --> --}}
    <script>
        tinymce.init({
            selector: '#mytextarea',
            height: 400,
            plugins: 'link image imagetools lists code table wordcount a11ychecker advcode casechange formatpainter linkchecker autolink lists checklist media mediaembed pageembed permanentpen powerpaste table advtable tinycomments tinymcespellchecker',
            toolbar: 'undo redo | link image | code a11ycheck addcomment showcomments casechange checklist code formatpainter pageembed permanentpen table',
            toolbar_mode: 'floating',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            contextmenu: 'link image imagetools table lists',
            image_title: true,
            automatic_uploads: true,
            file_picker_types: 'image',
            file_picker_callback: function (cb, value, meta) {
                var input = document.createElement('input');
                input.setAttribute('type', 'file');
                input.setAttribute('accept', 'image/*');
                input.onchange = function () {
                    var file = this.files[0];
                    var reader = new FileReader();
                    reader.onload = function () {
                        var id = 'blobid' + (new Date()).getTime();
                        var blobCache =  tinymce.activeEditor.editorUpload.blobCache;
                        var base64 = reader.result.split(',')[1];
                        var blobInfo = blobCache.create(id, file, base64);
                        blobCache.add(blobInfo);
                        cb(blobInfo.blobUri(), { title: file.name });
                    };
                    reader.readAsDataURL(file);
                };
                input.click();
            },
            setup: function (editor) {
                editor.ui.registry.addContextToolbar('imagealignment', {
                predicate: function (node) {
                    return node.nodeName.toLowerCase() === 'img'
                },
                items: 'alignleft aligncenter alignright',
                position: 'node',
                scope: 'node'
                });

                editor.ui.registry.addContextToolbar('textselection', {
                predicate: function (node) {
                    return !editor.selection.isCollapsed();
                },
                items: 'bold italic | blockquote',
                position: 'selection',
                scope: 'node'
                });
                var isAnchorElement = function (node) {
                return node.nodeName.toLowerCase() === 'a' && node.href;
                };

                var getAnchorElement = function () {
                var node = editor.selection.getNode();
                return isAnchorElement(node) ? node : null;
                };

                editor.ui.registry.addContextForm('link-form', {
                launch: {
                    type: 'contextformtogglebutton',
                    icon: 'link'
                },
                label: 'Link',
                predicate: isAnchorElement,
                initValue: function () {
                    var elm = getAnchorElement();
                    return !!elm ? elm.href : '';
                },
                commands: [
                    {
                    type: 'contextformtogglebutton',
                    icon: 'link',
                    tooltip: 'Link',
                    primary: true,
                    onSetup: function (buttonApi) {
                        buttonApi.setActive(!!getAnchorElement());
                        var nodeChangeHandler = function () {
                        buttonApi.setActive(!editor.readonly && !!getAnchorElement());
                        };
                        editor.on('nodechange', nodeChangeHandler);
                        return function () {
                        editor.off('nodechange', nodeChangeHandler);
                        }
                    },
                    onAction: function (formApi) {
                        var value = formApi.getValue();
                        console.log('Save link clicked with value: ' + value);
                        formApi.hide();
                    }
                    },
                    {
                    type: 'contextformtogglebutton',
                    icon: 'unlink',
                    tooltip: 'Remove link',
                    active: false,
                    onAction: function (formApi) {
                        console.log('Remove link clicked');
                        formApi.hide();
                    }
                    }
                ]
                });
            },
            content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',
            //Tables
            //plugins: 'table wordcount',
            content_style: '.left { text-align: left; } ' +
                'img.left { float: left; } ' +
                'table.left { float: left; } ' +
                '.right { text-align: right; } ' +
                'img.right { float: right; } ' +
                'table.right { float: right; } ' +
                '.center { text-align: center; } ' +
                'img.center { display: block; margin: 0 auto; } ' +
                'table.center { display: block; margin: 0 auto; } ' +
                '.full { text-align: justify; } ' +
                'img.full { display: block; margin: 0 auto; } ' +
                'table.full { display: block; margin: 0 auto; } ' +
                '.bold { font-weight: bold; } ' +
                '.italic { font-style: italic; } ' +
                '.underline { text-decoration: underline; } ' +
                '.example1 {} ' +
                'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }' +
                '.tablerow1 { background-color: #D3D3D3; }',
            formats: {
                alignleft: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'left' },
                aligncenter: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'center' },
                alignright: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'right' },
                alignfull: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'full' },
                bold: { inline: 'span', classes: 'bold' },
                italic: { inline: 'span', classes: 'italic' },
                underline: { inline: 'span', classes: 'underline', exact: true },
                strikethrough: { inline: 'del' },
                customformat: { inline: 'span', styles: { color: '#00ff00', fontSize: '20px' }, attributes: { title: 'My custom format'} , classes: 'example1'}
            },
            style_formats: [
                { title: 'Custom format', format: 'customformat' },
                { title: 'Align left', format: 'alignleft' },
                { title: 'Align center', format: 'aligncenter' },
                { title: 'Align right', format: 'alignright' },
                { title: 'Align full', format: 'alignfull' },
                { title: 'Bold text', inline: 'strong' },
                { title: 'Red text', inline: 'span', styles: { color: '#ff0000' } },
                { title: 'Red header', block: 'h1', styles: { color: '#ff0000' } },
                { title: 'Badge', inline: 'span', styles: { display: 'inline-block', border: '1px solid #2276d2', 'border-radius': '5px', padding: '2px 5px', margin: '0 2px', color: '#2276d2' } },
                { title: 'Table row 1', selector: 'tr', classes: 'tablerow1' },
                { title: 'Image formats' },
                { title: 'Image Left', selector: 'img', styles: { 'float': 'left', 'margin': '0 10px 0 10px' } },
                { title: 'Image Right', selector: 'img', styles: { 'float': 'right', 'margin': '0 0 10px 10px' } },
            ]
        });
    </script>
